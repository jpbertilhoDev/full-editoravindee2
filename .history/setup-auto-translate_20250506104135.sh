#!/bin/bash

# Cores para mensagens
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}=== ConfiguraÃ§Ã£o do Sistema de TraduÃ§Ã£o AutomÃ¡tica com DeepL ===${NC}"
echo

# Verificar se npm estÃ¡ instalado
if ! command -v npm &> /dev/null; then
    echo -e "${RED}Error: npm nÃ£o encontrado. Por favor, instale o Node.js e npm primeiro.${NC}"
    exit 1
fi

# Instalar dependÃªncias necessÃ¡rias
echo -e "${BLUE}Instalando dependÃªncias de traduÃ§Ã£o...${NC}"
npm install --save i18next i18next-browser-languagedetector i18next-http-backend react-i18next axios

echo -e "${GREEN}âœ“ DependÃªncias instaladas com sucesso!${NC}"

# Criar diretÃ³rio para traduÃ§Ãµes se nÃ£o existir
mkdir -p public/locales/{pt,en,fr,de,es}/

# Verificar se jÃ¡ existe um arquivo .env.local
if [ ! -f .env.local ]; then
    echo -e "${BLUE}Criando arquivo .env.local...${NC}"
    cat > .env.local << EOL
# ConfiguraÃ§Ãµes de TraduÃ§Ã£o
DEEPL_API_KEY=33ebc8a0-8a5c-4959-8e51-0c497f729760:fx
TRANSLATION_CACHE_TIME=3600
EOL
    echo -e "${GREEN}âœ“ Arquivo .env.local criado!${NC}"
else
    # Verificar se jÃ¡ contÃ©m as variÃ¡veis de ambiente necessÃ¡rias
    if ! grep -q "DEEPL_API_KEY" .env.local; then
        echo -e "${BLUE}Adicionando configuraÃ§Ãµes de traduÃ§Ã£o ao .env.local...${NC}"
        cat >> .env.local << EOL

# ConfiguraÃ§Ãµes de TraduÃ§Ã£o
DEEPL_API_KEY=33ebc8a0-8a5c-4959-8e51-0c497f729760:fx
TRANSLATION_CACHE_TIME=3600
EOL
        echo -e "${GREEN}âœ“ ConfiguraÃ§Ãµes adicionadas ao .env.local!${NC}"
    fi
fi

# Criar README para instruÃ§Ãµes
echo -e "${BLUE}Criando documentaÃ§Ã£o do sistema de traduÃ§Ã£o...${NC}"
cat > TRANSLATION-README.md << EOL
# Sistema de TraduÃ§Ã£o AutomÃ¡tica com DeepL

Este projeto utiliza DeepL para traduÃ§Ã£o automÃ¡tica de conteÃºdo para mÃºltiplos idiomas.

## Como funciona

1. O idioma nativo do site Ã© PortuguÃªs (Portugal)
2. As traduÃ§Ãµes sÃ£o gerenciadas por i18next
3. Idiomas nÃ£o-nativos sÃ£o traduzidos automaticamente via DeepL API

## ConfiguraÃ§Ã£o

No arquivo \`.env.local\`:

\`\`\`
DEEPL_API_KEY=sua-chave-api-deepl
TRANSLATION_CACHE_TIME=3600  # Tempo de cache em segundos
\`\`\`

## Idiomas Suportados

O sistema suporta todos os idiomas disponÃ­veis na API DeepL:
- PortuguÃªs ðŸ‡µðŸ‡¹ (nativo)
- InglÃªs ðŸ‡ºðŸ‡¸
- Espanhol ðŸ‡ªðŸ‡¸
- FrancÃªs ðŸ‡«ðŸ‡·
- AlemÃ£o ðŸ‡©ðŸ‡ª
- Italiano ðŸ‡®ðŸ‡¹
- HolandÃªs ðŸ‡³ðŸ‡±
- PolonÃªs ðŸ‡µðŸ‡±
- Russo ðŸ‡·ðŸ‡º
- JaponÃªs ðŸ‡¯ðŸ‡µ
- ChinÃªs ðŸ‡¨ðŸ‡³
- E mais...

## Desenvolvimento

Para adicionar novas strings, adicione-as apenas ao arquivo de traduÃ§Ã£o PortuguÃªs (\`public/locales/pt/common.json\`).
As traduÃ§Ãµes para outros idiomas serÃ£o geradas automaticamente.

## ProduÃ§Ã£o

Em produÃ§Ã£o, o sistema usa caching para reduzir chamadas Ã  API e melhorar performance.
EOL

echo -e "${GREEN}âœ“ DocumentaÃ§Ã£o criada: TRANSLATION-README.md${NC}"
echo
echo -e "${GREEN}âœ… ConfiguraÃ§Ã£o concluÃ­da com sucesso!${NC}"
echo
echo -e "${BLUE}Para iniciar o servidor:${NC} npm run dev"
echo -e "${BLUE}Para mais informaÃ§Ãµes:${NC} cat TRANSLATION-README.md"
echo

# Perguntar se o usuÃ¡rio quer iniciar o servidor
read -p "Deseja iniciar o servidor agora? (s/n): " iniciar_servidor
if [ "$iniciar_servidor" = "s" ] || [ "$iniciar_servidor" = "S" ]; then
    echo "ðŸš€ Iniciando servidor Next.js..."
    npm run dev
else
    echo "ðŸ‘‹ VocÃª pode iniciar o servidor mais tarde com 'npm run dev'"
fi 