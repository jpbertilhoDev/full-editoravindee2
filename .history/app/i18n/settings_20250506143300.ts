// Configura√ß√µes e dados est√°ticos do i18n que podem ser importados em componentes de servidor

// Idiomas suportados pelo DeepL
export const SUPPORTED_LANGUAGES = {
  pt: { name: "Portugu√™s", flag: "üáµüáπ", native: true },
  en: { name: "English", flag: "üá∫üá∏" },
  es: { name: "Espa√±ol", flag: "üá™üá∏" },
  fr: { name: "Fran√ßais", flag: "üá´üá∑" },
  de: { name: "Deutsch", flag: "üá©üá™" },
  it: { name: "Italiano", flag: "üáÆüáπ" },
  nl: { name: "Nederlands", flag: "üá≥üá±" },
  pl: { name: "Polski", flag: "üáµüá±" },
  ru: { name: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫" },
  ja: { name: "Êó•Êú¨Ë™û", flag: "üáØüáµ" },
  zh: { name: "‰∏≠Êñá", flag: "üá®üá≥" },
};

// Converter para array para uso em componentes
export const LANGUAGES_LIST = Object.entries(SUPPORTED_LANGUAGES).map(
  ([code, info]) => ({
    code,
    ...info,
  })
);

export const DEFAULT_LANGUAGE = "pt";
export const DEFAULT_NAMESPACE = "common";

// Mapeamento de c√≥digos de idioma para o formato do DeepL
export const LANGUAGE_MAP: Record<string, string> = {
  pt: "PT-PT", // Portugu√™s (Portugal)
  en: "EN", // Ingl√™s
  es: "ES", // Espanhol
  fr: "FR", // Franc√™s
  de: "DE", // Alem√£o
  nl: "NL", // Holand√™s
  it: "IT", // Italiano
  pl: "PL", // Polon√™s
  ru: "RU", // Russo
  ja: "JA", // Japon√™s
  zh: "ZH", // Chin√™s
};

export const fallbackLng = 'pt';
export const languages = ['pt', 'en', 'es', 'fr', 'de'];
export const defaultNamespace = 'common';

/**
 * Obt√©m as op√ß√µes b√°sicas de configura√ß√£o do i18next
 * Estas op√ß√µes s√£o compartilhadas entre cliente e servidor
 */
export function getOptions(lng = fallbackLng, ns = defaultNamespace) {
  return {
    supportedLngs: languages,
    fallbackLng,
    lng,
    fallbackNS: defaultNamespace,
    defaultNS: defaultNamespace,
    ns,
    // Configura√ß√µes gerais
    debug: process.env.NODE_ENV === 'development',
    load: 'languageOnly',
    interpolation: {
      escapeValue: false,
    },
  };
}
